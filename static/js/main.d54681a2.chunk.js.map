{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","_useState2","_slicedToArray","dob","setDob","_useState3","_useState4","age","setAge","React","createElement","style","position","top","left","transform","textAlign","className","width","height","type","id","value","onChange","e","target","backgroundColor","borderRadius","color","border","onClick","ageInMilliseconds","Date","ageInYears","Math","floor","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"wKA+CeA,MA7Cf,WAAe,IAAAC,EACSC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA3BI,EAAGF,EAAA,GAAEG,EAAMH,EAAA,GAAAI,EACIL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA3BE,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GAgClB,OACEG,IAAAC,cAAA,OAAKC,MApBU,CACXC,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,UAAU,UAeUC,UAAU,OAChCR,IAAAC,cAAA,UAAI,kBAAmBD,IAAAC,cAAA,WACvBD,IAAAC,cAAA,UAAI,4BACJD,IAAAC,cAAA,SAAOC,MARQ,CACjBO,MAAM,QACNC,OAAO,QAMuBC,KAAK,OAAOC,GAAG,MAAMC,MAAOnB,EAAKoB,SA1BvC,SAACC,GACzBpB,EAAOoB,EAAEC,OAAOH,UAyB8Eb,IAAAC,cAAA,WAAKD,IAAAC,cAAA,WACjGD,IAAAC,cAAA,UAAQC,MAjBQ,CAClBe,gBAAgB,UAChBC,aAAa,MACbC,MAAM,QACNC,OAAO,MACPX,MAAM,QACNC,OAAO,QAWyBW,QAnCb,WACnB,IAEMC,EAFQ,IAAIC,KACA,IAAIA,KAAK7B,GAErB8B,EAAaC,KAAKC,MAAMJ,EAAiB,UAC/CvB,EAAOyB,KA8BgD,iBACpD1B,GAAOE,IAAAC,cAAA,UAAI,WAASH,EAAI,gBC9BhB6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAf,EAAA,GAAAgB,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH3C,IAAAC,cAACD,IAAM4C,WAAU,KACf5C,IAAAC,cAACZ,EAAG,QAORsC","file":"static/js/main.d54681a2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction App() {\r\n  const [dob, setDob] = useState('');\r\n  const [age, setAge] = useState('');\r\n\r\n  const calculateAge = () => {\r\n    const today = new Date();\r\n    const birthDate = new Date(dob);\r\n    const ageInMilliseconds = today - birthDate;\r\n    const ageInYears = Math.floor(ageInMilliseconds / (365.25 * 24 * 60 * 60 * 1000));\r\n    setAge(ageInYears);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setDob(e.target.value);\r\n  };\r\n  var mydivstyle = {\r\n        position: \"fixed\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        textAlign:\"center\"\r\n  }\r\n  var mybuttonstyle = {\r\n    backgroundColor:\"#007fff\",\r\n    borderRadius:\"10%\",\r\n    color:\"white\",\r\n    border:\"0px\",\r\n    width:\"120px\",\r\n    height:\"40px\"\r\n  }\r\n  var myinputstyle = {\r\n    width:\"350px\",\r\n    height:\"30px\"\r\n  }\r\n  return (\r\n    <div style={mydivstyle} className=\"App\">\r\n      <h1>Age Calculator</h1><br/>\r\n      <h5>Enter your date of birth</h5>\r\n      <input style={myinputstyle} type=\"date\" id=\"dob\" value={dob} onChange={handleInputChange} /><br/><br/>\r\n      <button style={mybuttonstyle} onClick={calculateAge}>Calculate Age</button>\r\n      {age && <h2>You are {age} years old</h2>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}